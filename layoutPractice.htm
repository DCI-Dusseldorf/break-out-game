<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="styles.css" />
  </head>
  <body>
    <div class="main">
      <div class="brick-container">
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
        <div class="brick"></div>
      </div>
      <div id="ball"></div>
      <div id="platform"></div>
    </div>
  </body>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    .main {
      position: relative;
      width: 745px;
      height: 400px;
      background-color: aquamarine;
      margin: 0 auto;
      border: 1px solid black;
    }
    .brick-container {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
    }
    .brick {
      border: 1px solid aquamarine;
      background-color: black;
      width: 60px;
      height: 20px;
    }
    #ball {
      position: absolute;
      width: 25px;
      height: 25px;
      border-radius: 50%;
      background-color: black;
      bottom: 15px;
      left: 50%;
    }
    #platform {
      width: 70px;
      height: 10px;
      border-radius: 10%;
      background-color: black;
      position: absolute;
      bottom: 5px;
      left: 350px;
    }
  </style>
  <script>
    let ball = document.getElementById('ball');
    let board = document.getElementById('platform');
    let brick = document.querySelector('.brick');
    let container = document.querySelector('.brick-container');
    const bricks = document.querySelectorAll('.brick');
    let position = 350;

    document.addEventListener('keydown', function (e) {
      switch (e.code) {
        case 'ArrowLeft':
          position = position - 10;

          if (position <= 0) {
            position = 0;
          }
          board.style.left = `${position}px`;
          break;
        case 'ArrowRight':
          position = position + 10;

          if (position >= 745 - 70) {
            position = 745 - 70;
          }
          board.style.left = `${position}px`;
          break;
      }
    });
    let y = 350;
    let x = 745 / 2;
    let moveX = 2;
    let moveY = 2;
    let counter = 0;
    document.addEventListener('keypress', function (e) {
      if (e.code == 'Space' && counter == 0) {
        counter += 1;
        let ballSimulate = () => {
          x += moveX;
          y += moveY;
          if (
            collideBall(board.offsetLeft, board.offsetTop, paddleW, paddleH)
          ) {
            moveY = -1 * Math.abs(moveY);
          }
          if (x > 745 - 12.5 || x <= 0) {
            moveX *= -1;
          }

          bricks.forEach((brick) => {
            if (brick.style.visibility === 'hidden') {
              return;
            }
            const collidebrick = collideBall(
              brick.offsetLeft,
              brick.offsetTop,
              brick.offsetWidth,
              brick.offsetHeight
            );

            if (collidebrick) {
              moveY = Math.abs(moveY);
              brick.style.visibility = 'hidden';
            }
          });
          ball.style.top = `${y}px`;
          ball.style.left = `${x}px`;
        };

        setInterval(ballSimulate, 1000 / 60);
      }
    });

    const ballD = ball.offsetWidth;
    let paddleX = board.offsetLeft;
    let paddleY = board.offsetTop;
    const paddleW = board.offsetWidth;
    const paddleH = board.offsetHeight;

    function collideBall(paddleX, paddleY, paddleW, paddleH) {
      return (
        paddleX - ballD < x &&
        paddleX + ballD + paddleW > x &&
        paddleY - ballD < y &&
        paddleY + ballD > y
      );
    }
  </script>
</html>
